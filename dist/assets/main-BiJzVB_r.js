(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();class R{constructor(){this.animations=new Map,this.observers=new Map,this.setupIntersectionObserver()}animateNumber(e,t,s,i=1e3,o=null){const r=performance.now(),l=s-t,d=h=>{const c=h-r,p=Math.min(c/i,1),S=1-Math.pow(1-p,3),y=Math.round(t+l*S);e.textContent=y.toString().padStart(2,"0"),p<1?requestAnimationFrame(d):o&&o()};requestAnimationFrame(d)}pulseTimer(e,t=!0){t?e.classList.add("timer-display--pulse"):e.classList.remove("timer-display--pulse")}countdownAnimation(e){e.classList.add("timer-display--countdown"),setTimeout(()=>{e.classList.remove("timer-display--countdown")},1e3)}animateProgress(e,t,s=500){const i=parseFloat(e.style.width)||0,o=Math.min(Math.max(t,0),100),r=performance.now(),l=d=>{const h=d-r,c=Math.min(h/s,1),p=1-Math.pow(1-c,2),S=i+(o-i)*p;e.style.width=`${S}%`,c<1&&requestAnimationFrame(l)};requestAnimationFrame(l)}animateButtonPress(e){e.style.transform="scale(0.95)",e.style.transition="transform 0.1s ease",setTimeout(()=>{e.style.transform="",e.style.transition=""},100)}animateCardFlip(e,t){t?(e.style.transform="rotateY(180deg)",setTimeout(()=>{e.classList.add("day-btn--active"),e.style.transform="rotateY(360deg)"},300/2),setTimeout(()=>{e.style.transform=""},300)):e.classList.remove("day-btn--active")}staggerAnimation(e,t,s=100){e.forEach((i,o)=>{setTimeout(()=>{i.classList.add(t)},o*s)})}setupParallax(e,t=.5){const s=()=>{const o=window.pageYOffset*t;e.style.transform=`translateY(${o}px)`};return window.addEventListener("scroll",s,{passive:!0}),()=>window.removeEventListener("scroll",s)}setupIntersectionObserver(){this.intersectionObserver=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&t.target.classList.add("animate-in")})},{threshold:.1,rootMargin:"0px 0px -50px 0px"})}observeElement(e){this.intersectionObserver.observe(e)}unobserveElement(e){this.intersectionObserver.unobserve(e)}shakeElement(e){e.style.animation="shake 0.5s ease-in-out",setTimeout(()=>{e.style.animation=""},500)}bounceElement(e){e.style.animation="bounce 0.6s ease",setTimeout(()=>{e.style.animation=""},600)}celebrationAnimation(e){e.classList.add("celebration-pulse"),this.createConfettiEffect(e),setTimeout(()=>{e.classList.remove("celebration-pulse")},2e3)}createConfettiEffect(e){const t=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#ffeaa7"],s=e.getBoundingClientRect(),i=s.left+s.width/2,o=s.top+s.height/2;for(let r=0;r<20;r++){const l=document.createElement("div");l.style.cssText=`
                position: fixed;
                width: 8px;
                height: 8px;
                background: ${t[Math.floor(Math.random()*t.length)]};
                border-radius: 50%;
                pointer-events: none;
                z-index: 10000;
                left: ${i}px;
                top: ${o}px;
            `,document.body.appendChild(l);const d=Math.PI*2*r/20,h=150+Math.random()*100,c=Math.cos(d)*h,p=Math.sin(d)*h-200;l.animate([{transform:"translate(0, 0) scale(1)",opacity:1},{transform:`translate(${c}px, ${p}px) scale(0)`,opacity:0}],{duration:1500,easing:"cubic-bezier(0.25, 0.46, 0.45, 0.94)"}).onfinish=()=>{document.body.removeChild(l)}}}slideIn(e,t="left",s=300){const i={left:"translateX(-100%)",right:"translateX(100%)",up:"translateY(-100%)",down:"translateY(100%)"};e.style.transform=i[t],e.style.opacity="0",e.style.transition=`all ${s}ms ease`,setTimeout(()=>{e.style.transform="translate(0)",e.style.opacity="1"},10),setTimeout(()=>{e.style.transition=""},s+10)}fade(e,t=!0,s=300){t?(e.style.opacity="0",e.style.transition=`opacity ${s}ms ease`,setTimeout(()=>{e.style.opacity="1"},10)):(e.style.transition=`opacity ${s}ms ease`,e.style.opacity="0"),setTimeout(()=>{e.style.transition=""},s+10)}animateModal(e,t=!0){const s=e.querySelector(".modal__content");t?(e.classList.add("modal--open"),this.fade(e,!0,200),setTimeout(()=>{s.style.transform="scale(1) translateY(0)"},50)):(s.style.transform="scale(0.9) translateY(20px)",setTimeout(()=>{this.fade(e,!1,200),setTimeout(()=>{e.classList.remove("modal--open")},200)},100))}cleanup(){this.animations.clear(),this.observers.clear(),this.intersectionObserver&&this.intersectionObserver.disconnect()}}const m=new R;function B(a,e,t=!1){let s;return function(...o){const r=()=>{s=null,t||a(...o)},l=t&&!s;clearTimeout(s),s=setTimeout(r,e),l&&a(...o)}}function I(a,e){let t;return function(...s){t||(a.apply(this,s),t=!0,setTimeout(()=>t=!1,e))}}class O{constructor(){this.events={}}on(e,t){return this.events[e]||(this.events[e]=[]),this.events[e].push(t),()=>this.off(e,t)}off(e,t){this.events[e]&&(this.events[e]=this.events[e].filter(s=>s!==t))}emit(e,t){this.events[e]&&this.events[e].forEach(s=>s(t))}once(e,t){const s=i=>{t(i),this.off(e,s)};this.on(e,s)}}class b{static set(e,t){try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(s){return console.warn("Failed to save to localStorage:",s),!1}}static get(e,t=null){try{const s=localStorage.getItem(e);return s?JSON.parse(s):t}catch(s){return console.warn("Failed to read from localStorage:",s),t}}static remove(e){try{return localStorage.removeItem(e),!0}catch(t){return console.warn("Failed to remove from localStorage:",t),!1}}static clear(){try{return localStorage.clear(),!0}catch(e){return console.warn("Failed to clear localStorage:",e),!1}}}class n{static $(e,t=document){return t.querySelector(e)}static $$(e,t=document){return Array.from(t.querySelectorAll(e))}static create(e,t={},s=[]){const i=document.createElement(e);return Object.entries(t).forEach(([o,r])=>{o==="className"?i.className=r:o==="innerHTML"?i.innerHTML=r:o==="textContent"?i.textContent=r:o.startsWith("data-")?i.setAttribute(o,r):i[o]=r}),s.forEach(o=>{typeof o=="string"?i.appendChild(document.createTextNode(o)):i.appendChild(o)}),i}static addClass(e,...t){e.classList.add(...t)}static removeClass(e,...t){e.classList.remove(...t)}static toggleClass(e,t,s){return e.classList.toggle(t,s)}static hasClass(e,t){return e.classList.contains(t)}static on(e,t,s,i={}){return e.addEventListener(t,s,i),()=>e.removeEventListener(t,s)}static off(e,t,s){e.removeEventListener(t,s)}static once(e,t,s){const i=o=>{s(o),e.removeEventListener(t,i)};e.addEventListener(t,i)}static ready(e){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",e):e()}}class k{static formatTime(e){const t=Math.floor(e/60),s=e%60;return{minutes:t.toString().padStart(2,"0"),seconds:s.toString().padStart(2,"0"),display:`${t.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`}}static parseTime(e){const[t,s]=e.split(":").map(Number);return t*60+s}static secondsToMinutes(e){return Math.floor(e/60)}static minutesToSeconds(e){return e*60}static formatDuration(e){const t=Math.floor(e/3600),s=Math.floor(e%3600/60),i=e%60;return t>0?`${t}h ${s}m ${i}s`:s>0?`${s}m ${i}s`:`${i}s`}}class E{static isMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}static isTablet(){return/iPad|Android(?!.*Mobile)/i.test(navigator.userAgent)}static isDesktop(){return!this.isMobile()&&!this.isTablet()}static isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0}static getViewportSize(){return{width:window.innerWidth,height:window.innerHeight}}static isLandscape(){return window.innerWidth>window.innerHeight}static isPortrait(){return window.innerHeight>window.innerWidth}static supportsWebGL(){try{const e=document.createElement("canvas");return!!(window.WebGLRenderingContext&&e.getContext("webgl"))}catch{return!1}}static getDevicePixelRatio(){return window.devicePixelRatio||1}}class f{static announceToScreenReader(e,t="polite"){const s=document.createElement("div");s.setAttribute("aria-live",t),s.setAttribute("aria-atomic","true"),s.className="sr-only",s.textContent=e,document.body.appendChild(s),setTimeout(()=>{document.body.removeChild(s)},1e3)}static trapFocus(e){const t=e.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),s=t[0],i=t[t.length-1],o=r=>{r.key==="Tab"&&(r.shiftKey?document.activeElement===s&&(i.focus(),r.preventDefault()):document.activeElement===i&&(s.focus(),r.preventDefault()))};return e.addEventListener("keydown",o),s&&s.focus(),()=>{e.removeEventListener("keydown",o)}}static setAriaExpanded(e,t){e.setAttribute("aria-expanded",t.toString())}static setAriaHidden(e,t){e.setAttribute("aria-hidden",t.toString())}}const x={};class ${constructor(){this.isInitialized=!1,this.audioContext=null,this.currentAudio=null,this.speechQueue=[],this.isSpeaking=!1,this.apiKey=null,this.serviceAccount=null,this.baseUrl="https://texttospeech.googleapis.com/v1/text:synthesize",this.monthlyUsage=0,this.monthlyLimit=4e6,this.defaultVoice={languageCode:"en-US",name:"en-US-Standard-A",ssmlGender:"FEMALE"},this.voiceOptions={"en-US-Standard-A":{name:"en-US-Standard-A",ssmlGender:"FEMALE",description:"Standard Female A"},"en-US-Standard-B":{name:"en-US-Standard-B",ssmlGender:"MALE",description:"Standard Male B"},"en-US-Standard-C":{name:"en-US-Standard-C",ssmlGender:"FEMALE",description:"Standard Female C"},"en-US-Standard-D":{name:"en-US-Standard-D",ssmlGender:"MALE",description:"Standard Male D"},"en-US-Standard-E":{name:"en-US-Standard-E",ssmlGender:"FEMALE",description:"Standard Female E"},"en-US-Standard-F":{name:"en-US-Standard-F",ssmlGender:"FEMALE",description:"Standard Female F"},"en-US-Standard-G":{name:"en-US-Standard-G",ssmlGender:"MALE",description:"Standard Male G"},"en-US-Standard-H":{name:"en-US-Standard-H",ssmlGender:"FEMALE",description:"Standard Female H"},"en-US-Standard-I":{name:"en-US-Standard-I",ssmlGender:"MALE",description:"Standard Male I"},"en-US-Standard-J":{name:"en-US-Standard-J",ssmlGender:"MALE",description:"Standard Male J"}},this.loadUsage()}async initialize(e=null,t=null){try{return this.apiKey=e||this.getApiKey(),this.serviceAccount=t||this.getServiceAccount(),!this.apiKey&&!this.serviceAccount?(console.warn("No Google Cloud credentials found. Falling back to browser speech synthesis."),!1):(this.audioContext=new(window.AudioContext||window.webkitAudioContext),await this.testConnection(),this.isInitialized=!0,console.log("Google Cloud TTS initialized successfully"),!0)}catch(s){return console.error("Failed to initialize Google Cloud TTS:",s),!1}}getApiKey(){return(x==null?void 0:x.VITE_GOOGLE_CLOUD_API_KEY)||window.GOOGLE_CLOUD_API_KEY||localStorage.getItem("google-cloud-api-key")}getServiceAccount(){const e=localStorage.getItem("google-service-account");if(e)try{return JSON.parse(e)}catch{return console.warn("Invalid service account JSON in localStorage"),null}return null}async testConnection(){return await this.synthesizeSpeech("TTS test",this.defaultVoice)!==null}async synthesizeSpeech(e,t=null){var o;if(!this.apiKey&&!this.serviceAccount)throw new Error("Google Cloud credentials not configured");if(this.monthlyUsage+e.length>this.monthlyLimit)throw new Error("Monthly free tier limit reached. Please upgrade or wait until next month.");const s=t||this.defaultVoice,i={input:{text:e},voice:{languageCode:s.languageCode||"en-US",name:s.name||"en-US-Standard-A",ssmlGender:s.ssmlGender||"FEMALE"},audioConfig:{audioEncoding:"MP3",speakingRate:.9,pitch:0,volumeGainDb:0}};try{let r=this.baseUrl,l={"Content-Type":"application/json"};if(this.apiKey)r+=`?key=${this.apiKey}`;else if(this.serviceAccount){const c=await this.getAccessToken();l.Authorization=`Bearer ${c}`}const d=await fetch(r,{method:"POST",headers:l,body:JSON.stringify(i)});if(!d.ok){const c=await d.json();throw new Error(`Google Cloud TTS API error: ${((o=c.error)==null?void 0:o.message)||d.statusText}`)}const h=await d.json();return this.monthlyUsage+=e.length,this.saveUsage(),h.audioContent}catch(r){throw console.error("Speech synthesis failed:",r),r}}async getAccessToken(){throw this.serviceAccount?(this.serviceAccount.client_email,console.warn("Service account authentication requires backend support. Please use API key instead."),new Error("Service account authentication not supported in client-side app. Please use API key.")):new Error("Service account not configured")}async playAudio(e){try{const t=Uint8Array.from(atob(e),r=>r.charCodeAt(0)),s=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength),i=await this.audioContext.decodeAudioData(s),o=this.audioContext.createBufferSource();return o.buffer=i,o.connect(this.audioContext.destination),this.currentAudio=o,new Promise((r,l)=>{o.onended=()=>{this.currentAudio=null,r()},o.onerror=d=>{this.currentAudio=null,l(d)},o.start(0)})}catch(t){throw console.error("Failed to play audio:",t),t}}async speak(e,t=!1,s=null){if(!this.isInitialized){console.warn("TTS not initialized, cannot speak");return}t&&this.clearSpeech(),this.speechQueue.push({text:e,voiceConfig:s}),await this.processSpeechQueue()}async processSpeechQueue(){if(!(this.speechQueue.length===0||this.isSpeaking)){this.isSpeaking=!0;try{for(;this.speechQueue.length>0;){const{text:e,voiceConfig:t}=this.speechQueue.shift(),s=await this.synthesizeSpeech(e,t);await this.playAudio(s),this.speechQueue.length>0&&await new Promise(i=>setTimeout(i,100))}}catch(e){console.error("Error processing speech queue:",e)}finally{this.isSpeaking=!1}}}clearSpeech(){if(this.currentAudio){try{this.currentAudio.stop()}catch(e){console.warn("Error stopping audio:",e)}this.currentAudio=null}this.speechQueue=[],this.isSpeaking=!1}stop(){this.clearSpeech()}getAvailableVoices(){return Object.keys(this.voiceOptions)}setVoice(e){return this.voiceOptions[e]?(this.defaultVoice={languageCode:"en-US",...this.voiceOptions[e]},!0):!1}loadUsage(){const e=localStorage.getItem("google-tts-usage");if(e){const t=JSON.parse(e),s=new Date,i=new Date(t.date);s.getMonth()!==i.getMonth()||s.getFullYear()!==i.getFullYear()?(this.monthlyUsage=0,this.saveUsage()):this.monthlyUsage=t.usage||0}}saveUsage(){const e={usage:this.monthlyUsage,date:new Date().toISOString()};localStorage.setItem("google-tts-usage",JSON.stringify(e))}getUsageInfo(){const e=this.monthlyLimit-this.monthlyUsage,t=this.monthlyUsage/this.monthlyLimit*100;return{used:this.monthlyUsage,limit:this.monthlyLimit,remaining:e,percentage:Math.round(t*100)/100}}updateSettings(e){e.voiceRate!==void 0&&Math.max(.25,Math.min(4,e.voiceRate)),e.voiceVolume!==void 0&&Math.max(0,Math.min(1,e.voiceVolume))}destroy(){this.clearSpeech(),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.isInitialized=!1}}const T={};function w(){const a=T==null?void 0:T.VITE_GOOGLE_CLOUD_API_KEY,e=window.GOOGLE_CLOUD_API_KEY,t=localStorage.getItem("google-cloud-api-key");return console.log("🔍 API Key Debug:",{envKey:a?"✅ Found":"❌ Not found",windowKey:e?"✅ Found":"❌ Not found",localKey:t?"✅ Found":"❌ Not found",envKeyValue:a?`${a.substring(0,10)}...`:"null"}),a||e||t||null}function C(a){a?(localStorage.setItem("google-cloud-api-key",a),window.GOOGLE_CLOUD_API_KEY=a):(localStorage.removeItem("google-cloud-api-key"),delete window.GOOGLE_CLOUD_API_KEY)}function A(a){a?(localStorage.setItem("google-service-account",JSON.stringify(a)),window.GOOGLE_SERVICE_ACCOUNT=a):(localStorage.removeItem("google-service-account"),delete window.GOOGLE_SERVICE_ACCOUNT)}function F(){const a=localStorage.getItem("google-service-account");if(a)try{return JSON.parse(a)}catch{return console.warn("Invalid service account JSON in localStorage"),null}return null}function D(a){try{return!a||typeof a!="object"?!1:["type","project_id","private_key_id","private_key","client_email","client_id"].every(t=>a.hasOwnProperty(t))}catch{return!1}}function L(a){return a&&typeof a=="string"&&a.length>=30}function P(a){return a>=1e6?`${(a/1e6).toFixed(1)}M`:a>=1e3?`${(a/1e3).toFixed(1)}K`:a.toString()}class G extends O{constructor(){super(),this.state={currentDay:null,currentWorkout:null,isRunning:!1,isPaused:!1,currentPhase:0,currentExercise:0,timeRemaining:0,phaseStartTime:0,phaseElapsedTime:0,totalWorkoutTime:0,completedExercises:0,settings:{soundEnabled:!0,vibrationEnabled:!0,autoAdvance:!0,voiceEnabled:!0,voiceVolume:.8,voiceRate:.9,theme:"light",animations:!0,googleTTSEnabled:!0}},this.timer=null,this.speechSynthesis=window.speechSynthesis,this.speechQueue=[],this.isSpeaking=!1,this.wakeLock=null,console.log("Creating TTSService instance..."),this.ttsService=new $,console.log("TTSService created:",this.ttsService),this.useGoogleTTS=!1,this.handleResize=I(this.onResize.bind(this),250),this.handleVisibilityChange=this.onVisibilityChange.bind(this),this.handleKeydown=this.onKeydown.bind(this),this.init()}async init(){try{console.log("=== APP INITIALIZATION START ==="),console.log("Starting app initialization..."),await this.waitForDOM(),console.log("DOM ready"),this.initializeElements(),console.log("Elements initialized"),this.loadSettings(),console.log("Settings loaded"),console.log("About to call bindEvents()...");try{this.bindEvents(),console.log("Events bound successfully")}catch(e){throw console.error("bindEvents() failed:",e),e}this.setupAccessibility(),this.setupPerformanceOptimizations(),this.populateExerciseLibrary(),console.log("Initializing speech synthesis...");try{await this.initializeSpeech(),console.log("Speech synthesis initialized")}catch(e){console.error("Speech synthesis initialization failed:",e)}console.log("=== GOOGLE TTS INITIALIZATION START ==="),console.log("About to initialize Google TTS..."),console.log("TTS Service exists:",!!this.ttsService),console.log("TTS Service type:",typeof this.ttsService),console.log("About to call initializeGoogleTTS() method...");try{await this.initializeGoogleTTS(),console.log("Google TTS initialization completed")}catch(e){console.error("Google TTS initialization failed:",e)}console.log("=== GOOGLE TTS INITIALIZATION END ==="),console.log("About to update TTS status...");try{this.updateTTSStatus(),console.log("TTS status updated successfully")}catch(e){console.error("Failed to update TTS status:",e)}console.log("Setting up PWA...");try{this.setupPWA(),console.log("PWA setup completed")}catch(e){console.error("PWA setup failed:",e)}console.log("Emitting app:ready event...");try{this.emit("app:ready"),console.log("App ready event emitted")}catch(e){console.error("Failed to emit app:ready event:",e)}console.log("BJJ Workout App initialized successfully"),console.log("=== APP INITIALIZATION END ===")}catch(e){console.error("Failed to initialize app:",e),this.showError("Failed to initialize the application")}}waitForDOM(){return new Promise(e=>{document.readyState==="loading"?document.addEventListener("DOMContentLoaded",e):e()})}initializeElements(){this.elements={minutes:n.$("#minutes"),seconds:n.$("#seconds"),timerLabel:n.$("#timer-label"),phaseInfo:n.$("#phase-info"),progressFill:n.$("#progress-fill"),progressText:n.$("#progress-text"),timerDisplay:n.$("#time-display"),startBtn:n.$("#start-timer"),resetBtn:n.$("#reset-timer"),backBtn:n.$("#back-btn"),skipBtn:n.$("#skip-btn"),fullscreenBtn:n.$("#fullscreen-btn"),dayButtons:n.$$(".day-btn"),workoutDetails:n.$("#workout-details"),exerciseGrid:n.$("#exercise-grid"),settingsBtn:n.$("#settings-btn"),settingsContent:n.$("#settings-content"),settingsInputs:{soundEnabled:n.$("#sound-enabled"),vibrationEnabled:n.$("#vibration-enabled"),autoAdvance:n.$("#auto-advance"),voiceEnabled:n.$("#voice-enabled"),voiceVolume:n.$("#voice-volume"),voiceRate:n.$("#voice-rate")},modal:n.$("#exercise-modal"),modalTitle:n.$("#modal-title"),modalDescription:n.$("#modal-description"),modalCues:n.$("#modal-cues"),closeModalBtn:n.$("#close-modal"),notificationSound:n.$("#notification-sound")},this.validateElements()}validateElements(){const t=["minutes","seconds","startBtn","resetBtn"].filter(s=>!this.elements[s]);if(t.length>0)throw new Error(`Critical elements missing: ${t.join(", ")}`);console.log("Fullscreen button element:",this.elements.fullscreenBtn)}bindEvents(){console.log("=== BIND EVENTS METHOD CALLED ===");try{if(console.log("Starting to bind events..."),this.elements.dayButtons.forEach(u=>{n.on(u,"click",g=>{const v=parseInt(u.dataset.day);this.selectDay(v),m.animateButtonPress(u)})}),n.on(this.elements.startBtn,"click",()=>{this.toggleWorkout(),this.hapticFeedback()}),n.on(this.elements.resetBtn,"click",()=>{this.resetWorkout(),this.hapticFeedback()}),n.on(this.elements.backBtn,"click",()=>{this.goBack(),this.hapticFeedback()}),n.on(this.elements.skipBtn,"click",()=>{this.skipExercise(),this.hapticFeedback()}),this.elements.fullscreenBtn)n.on(this.elements.fullscreenBtn,"click",()=>{console.log("Fullscreen button clicked via DOM helper"),this.toggleFullscreen(),this.hapticFeedback()}),this.elements.fullscreenBtn.addEventListener("click",()=>{console.log("Fullscreen button clicked via direct listener"),this.toggleFullscreen(),this.hapticFeedback()});else{console.warn("Fullscreen button not found in DOM");const u=document.getElementById("fullscreen-btn");u&&(console.log("Found fullscreen button directly, binding event"),u.addEventListener("click",()=>{console.log("Fullscreen button clicked via direct finder"),this.toggleFullscreen(),this.hapticFeedback()}),this.elements.fullscreenBtn=u)}n.on(this.elements.settingsBtn,"click",()=>{this.toggleSettings()}),Object.entries(this.elements.settingsInputs).forEach(([u,g])=>{if(g){const v=u.includes("voice")?B(()=>this.saveSettings(),300):()=>this.saveSettings();n.on(g,"change",v),n.on(g,"input",v)}});const e=n.$("#google-tts-enabled"),t=n.$("#google-api-key"),s=n.$("#google-voice-select"),i=n.$("#save-google-tts"),o=n.$("#test-google-tts"),r=n.$("#tts-status"),l=n.$("#tts-usage-display"),d=n.$$('input[name="auth-method"]'),h=n.$("#api-key-section"),c=n.$("#service-account-section"),p=n.$("#service-account-file"),S=n.$("#service-account-preview");if(d.forEach(u=>{n.on(u,"change",()=>{u.value==="api-key"?(n.removeClass(h,"hidden"),n.addClass(c,"hidden")):(n.addClass(h,"hidden"),n.removeClass(c,"hidden"))})}),p&&n.on(p,"change",u=>{const g=u.target.files[0];g&&this.loadServiceAccountFile(g)}),e&&n.on(e,"change",()=>this.saveGoogleTTSSettings()),i&&n.on(i,"click",()=>this.saveGoogleTTSSettings()),o&&n.on(o,"click",()=>this.testGoogleTTS()),t){const u=w();u&&(t.value=u),!t.value&&u&&(t.value=u)}const y=F();if(y){const u=n.$('input[value="service-account"]');u&&(u.checked=!0,n.removeClass(h,"hidden"),n.addClass(c,"hidden"),this.showServiceAccountPreview(y))}this.elements.closeModalBtn&&n.on(this.elements.closeModalBtn,"click",()=>this.closeModal()),this.elements.modal&&n.on(this.elements.modal,"click",u=>{u.target===this.elements.modal&&this.closeModal()}),window.addEventListener("resize",this.handleResize,{passive:!0}),document.addEventListener("visibilitychange",this.handleVisibilityChange),document.addEventListener("keydown",this.handleKeydown),document.addEventListener("fullscreenchange",this.handleFullscreenChange.bind(this)),document.addEventListener("webkitfullscreenchange",this.handleFullscreenChange.bind(this)),document.addEventListener("mozfullscreenchange",this.handleFullscreenChange.bind(this)),document.addEventListener("MSFullscreenChange",this.handleFullscreenChange.bind(this)),E.isTouchDevice()&&this.setupTouchGestures(),console.log("Events bound successfully")}catch(e){throw console.error("Error binding events:",e),e}}setupAccessibility(){const e=`
            .sr-only {
                position: absolute;
                width: 1px;
                height: 1px;
                padding: 0;
                margin: -1px;
                overflow: hidden;
                clip: rect(0, 0, 0, 0);
                white-space: nowrap;
                border: 0;
            }
        `,t=document.createElement("style");t.textContent=e,document.head.appendChild(t),this.enhanceAccessibility()}enhanceAccessibility(){this.elements.timerDisplay&&(this.elements.timerDisplay.setAttribute("role","timer"),this.elements.timerDisplay.setAttribute("aria-live","polite"),this.elements.timerDisplay.setAttribute("aria-label","Workout timer")),this.elements.progressFill&&(this.elements.progressFill.setAttribute("role","progressbar"),this.elements.progressFill.setAttribute("aria-valuemin","0"),this.elements.progressFill.setAttribute("aria-valuemax","100")),this.elements.dayButtons.forEach((e,t)=>{e.setAttribute("aria-label",`Select day ${t+1} workout`)}),this.elements.settingsBtn&&(this.elements.settingsBtn.setAttribute("aria-label","Open settings"),this.elements.settingsBtn.setAttribute("aria-expanded","false")),this.elements.fullscreenBtn&&this.updateFullscreenButton(!1),setTimeout(()=>{this.ensureFullscreenFunctionality()},500)}setupPerformanceOptimizations(){this.elements.dayButtons.forEach(e=>{m.observeElement(e)}),this.preloadResources(),"PerformanceObserver"in window&&this.setupPerformanceObserver()}preloadResources(){this.elements.notificationSound&&this.elements.notificationSound.load(),this.speechSynthesis&&this.speechSynthesis.getVoices(),this.ensureFullscreenStyles()}setupPerformanceObserver(){try{new PerformanceObserver(t=>{for(const s of t.getEntries())s.entryType==="measure"&&console.log(`Performance: ${s.name} took ${s.duration}ms`)}).observe({entryTypes:["measure"]})}catch(e){console.warn("Performance Observer not supported:",e)}}setupTouchGestures(){let e,t,s;const i=r=>{e=r.touches[0].clientX,t=r.touches[0].clientY,s=Date.now()},o=r=>{if(!e||!t)return;const l=r.changedTouches[0].clientX;r.changedTouches[0].clientY;const d=Date.now(),h=l-e,c=d-s;Math.abs(h)>50&&c<300&&(h>0&&!this.elements.backBtn.disabled?this.goBack():h<0&&!this.elements.skipBtn.disabled&&this.skipExercise()),e=t=null};document.addEventListener("touchstart",i,{passive:!0}),document.addEventListener("touchend",o,{passive:!0})}toggleFullscreen(){console.log("toggleFullscreen called, isFullscreen:",this.isFullscreen()),this.isFullscreen()?this.exitFullscreen():this.enterFullscreen()}async enterFullscreen(){console.log("enterFullscreen called");try{const e=n.$("#timer-container")||this.elements.timerDisplay.parentElement;if(console.log("Timer container found:",!!e),!e){console.warn("Timer container not found for fullscreen");return}n.addClass(document.body,"fullscreen-mode"),n.addClass(e,"timer-fullscreen"),this.prepareTimerForFullscreen(e),console.log("Requesting fullscreen...");let t=!1;e.requestFullscreen?(console.log("Using requestFullscreen"),await e.requestFullscreen(),t=!0):e.webkitRequestFullscreen?(console.log("Using webkitRequestFullscreen"),await e.webkitRequestFullscreen(),t=!0):e.mozRequestFullScreen?(console.log("Using mozRequestFullScreen"),await e.mozRequestFullScreen(),t=!0):e.msRequestFullscreen?(console.log("Using msRequestFullscreen"),await e.msRequestFullscreen(),t=!0):(console.log("No fullscreen API available, using CSS fallback"),this.simulateFullscreen(e)),(t||n.hasClass(e,"timer-fullscreen-simulated"))&&(this.updateFullscreenButton(!0),f.announceToScreenReader("Entered fullscreen mode"),this.emit("fullscreen:enter"),console.log("Fullscreen mode activated"))}catch(e){console.warn("Fullscreen request failed:",e),console.log("Falling back to CSS-only fullscreen"),this.simulateFullscreen(timerContainer),this.updateFullscreenButton(!0)}}exitFullscreen(){try{n.removeClass(document.body,"fullscreen-mode");const e=n.$("#timer-container")||this.elements.timerDisplay.parentElement;e&&(n.removeClass(e,"timer-fullscreen"),n.removeClass(e,"timer-fullscreen-simulated")),document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.msExitFullscreen&&document.msExitFullscreen(),this.updateFullscreenButton(!1),f.announceToScreenReader("Exited fullscreen mode"),this.emit("fullscreen:exit")}catch(e){console.warn("Exit fullscreen failed:",e)}}simulateFullscreen(e){console.log("simulateFullscreen called"),e||(e=n.$("#timer-container")||this.elements.timerDisplay.parentElement),console.log("Container for simulated fullscreen:",e),e?(n.addClass(document.body,"fullscreen-mode"),n.addClass(e,"timer-fullscreen"),n.addClass(e,"timer-fullscreen-simulated"),console.log("CSS classes added for simulated fullscreen")):console.error("No container found for simulated fullscreen")}isFullscreen(){return!!(document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||n.hasClass(document.body,"fullscreen-mode"))}handleFullscreenChange(){const e=this.isFullscreen();if(!e){n.removeClass(document.body,"fullscreen-mode");const t=n.$("#timer-container")||this.elements.timerDisplay.parentElement;t&&(n.removeClass(t,"timer-fullscreen"),n.removeClass(t,"timer-fullscreen-simulated"))}this.updateFullscreenButton(e),this.emit("fullscreen:change",{isFullscreen:e})}prepareTimerForFullscreen(e){if(!e)return;const t=n.$(".timer-controls")||this.createTimerControls();t&&!e.contains(t)&&e.appendChild(t);const s=n.$(".progress-container");s&&!e.contains(s)&&e.querySelectorAll(".progress-bar, #progress-text").length===0&&console.warn("Progress elements not found in timer container for fullscreen")}createTimerControls(){const e=n.create("div",{className:"timer-controls"});return[this.elements.startBtn,this.elements.resetBtn,this.elements.backBtn,this.elements.skipBtn,this.elements.fullscreenBtn].filter(s=>s).forEach(s=>{s&&s.parentNode&&e.appendChild(s.cloneNode(!0))}),e}updateFullscreenButton(e){if(console.log("updateFullscreenButton called with:",e),!this.elements.fullscreenBtn){console.warn("No fullscreen button to update");return}const t=this.elements.fullscreenBtn.querySelector(".fullscreen-icon"),s=this.elements.fullscreenBtn.querySelector(".fullscreen-text");console.log("Fullscreen button elements - icon:",!!t,"text:",!!s),e?(this.elements.fullscreenBtn.setAttribute("aria-label","Exit fullscreen"),t&&(t.textContent="⏹️"),s&&(s.textContent="Exit Fullscreen"),n.addClass(this.elements.fullscreenBtn,"btn--active")):(this.elements.fullscreenBtn.setAttribute("aria-label","Enter fullscreen"),t&&(t.textContent="🔳"),s&&(s.textContent="Fullscreen"),n.removeClass(this.elements.fullscreenBtn,"btn--active")),console.log("Fullscreen button updated successfully")}async setupPWA(){"wakeLock"in navigator&&(this.on("workout:start",async()=>{try{this.wakeLock=await navigator.wakeLock.request("screen"),console.log("Wake lock acquired")}catch(e){console.warn("Wake lock failed:",e)}}),this.on("workout:end",()=>{this.wakeLock&&(this.wakeLock.release(),this.wakeLock=null,console.log("Wake lock released"))}))}setState(e,t=!0){const s={...this.state};this.state={...this.state,...e},t&&this.emit("state:change",{prevState:s,newState:this.state,updates:e}),this.saveState()}saveState(){const e={currentDay:this.state.currentDay,settings:this.state.settings};b.set("bjj-workout-state",e)}loadState(){const e=b.get("bjj-workout-state",{});e.currentDay&&this.setState({currentDay:e.currentDay},!1),e.settings&&this.setState({settings:{...this.state.settings,...e.settings}},!1)}selectDay(e){performance.mark("selectDay-start");const t=this.getWorkoutData()[e];if(!t){this.showError(`Workout for day ${e} not found`);return}this.setState({currentDay:e,currentWorkout:t,currentPhase:0,currentExercise:0,timeRemaining:0}),this.updateDayButtons(e),this.displayWorkoutDetails(),this.resetWorkout(),this.updateNavigationButtons(),f.announceToScreenReader(`Selected ${t.name} workout`),performance.mark("selectDay-end"),performance.measure("selectDay","selectDay-start","selectDay-end"),this.emit("day:selected",{day:e,workout:t})}updateDayButtons(e){this.elements.dayButtons.forEach((t,s)=>{const o=s+1===e;n.removeClass(t,"day-btn--active"),o&&(n.addClass(t,"day-btn--active"),m.animateCardFlip(t,!0))})}displayWorkoutDetails(){if(!this.state.currentWorkout||!this.elements.workoutDetails)return;const e=this.state.currentWorkout,t=`
            <div class="workout-header">
                <h3 class="workout-title">${e.name}</h3>
                <p class="workout-focus">${e.focus}</p>
                <p class="workout-duration">${e.duration} minutes</p>
            </div>
            <div class="workout-phases">
                ${e.phases.map((s,i)=>`
                    <div class="phase-card ${s.optional?"phase-card--optional":""}">
                        <h4 class="phase-title">${s.name}</h4>
                        <p class="phase-duration">${s.duration} minutes</p>
                        ${s.repeat?`<p class="phase-repeat">Repeat ${s.repeat} times</p>`:""}
                        <div class="phase-exercises">
                            <ol class="exercise-list">
                                ${s.exercises.map((o,r)=>`
                                    <li class="exercise-item">
                                        <span class="exercise-number">${r+1}</span>
                                        <div class="exercise-info">
                                            <span class="exercise-name">${o.name}</span>
                                            ${o.description?`<span class="exercise-description">${o.description}</span>`:""}
                                        </div>
                                        <span class="exercise-duration">${o.duration}s</span>
                                    </li>
                                `).join("")}
                            </ol>
                        </div>
                    </div>
                `).join("")}
            </div>
        `;this.elements.workoutDetails.innerHTML=t,m.slideIn(this.elements.workoutDetails,"up",300)}populateExerciseLibrary(){if(!this.elements.exerciseGrid)return;const e=this.getExerciseLibrary(),t=Object.entries(e).map(([i,o])=>`
            <div class="exercise-card" data-exercise="${i}">
                <div class="exercise-header">
                    <h4 class="exercise-name">${i}</h4>
                    <span class="exercise-type exercise-type--${o.type.toLowerCase()}">${o.type}</span>
                </div>
                <p class="exercise-description">${o.description}</p>
                <button class="btn btn--exercise" onclick="bjjApp.showExerciseModal('${i}')">
                    View Details
                </button>
            </div>
        `).join("");this.elements.exerciseGrid.innerHTML=t;const s=this.elements.exerciseGrid.querySelectorAll(".exercise-card");m.staggerAnimation(s,"animate-in",100)}startNextPhase(){if(console.log("startNextPhase called, currentPhase:",this.state.currentPhase),!this.state.isRunning||!this.state.currentWorkout)return;const e=this.state.currentWorkout.phases;if(console.log("Total phases:",e.length),this.state.currentPhase>=e.length){console.log("All phases complete"),this.completeWorkout();return}const t=e[this.state.currentPhase];console.log("Starting phase:",t.name,"Phase duration:",t.duration,"minutes"),this.setState({phaseStartTime:Date.now(),phaseElapsedTime:0,currentExercise:0}),console.log("Phase timing initialized - start time:",this.state.phaseStartTime),this.elements.timerLabel.textContent=t.name,this.elements.phaseInfo.textContent=`Phase ${this.state.currentPhase+1} of ${e.length}`,console.log("Announcing phase:",t.name),this.speak(`Starting ${t.name}`,!1),this.startNextExercise()}startNextExercise(){console.log("startNextExercise called, currentExercise:",this.state.currentExercise);try{if(!this.state.isRunning||!this.state.currentWorkout){console.log("Cannot start next exercise - not running or no workout");return}const e=this.state.currentWorkout.phases;if(this.state.currentPhase>=e.length){console.log("Current phase out of bounds, completing workout"),this.completeWorkout();return}const t=e[this.state.currentPhase];console.log("Current phase:",t.name,"Phase exercises:",t.exercises.length),console.log("Current exercise index:",this.state.currentExercise);const s=(Date.now()-this.state.phaseStartTime)/1e3;this.setState({phaseElapsedTime:s}),this.state.currentExercise>=t.exercises.length&&(console.log("Current exercise index out of bounds, resetting to 0"),this.setState({currentExercise:0}));const i=t.exercises[this.state.currentExercise];console.log("Starting exercise:",i.name,"Duration:",i.duration);const o=t.exercises.reduce((d,h)=>d+h.duration,0),l=Math.floor(this.state.phaseElapsedTime/o)+1;this.elements.timerLabel.textContent=i.name,this.elements.phaseInfo.textContent=`${t.name} - Round ${l} (${Math.floor(this.state.phaseElapsedTime/60)}:${Math.floor(this.state.phaseElapsedTime%60).toString().padStart(2,"0")})`,this.setState({timeRemaining:i.duration}),this.updateDisplay(),console.log("About to announce exercise:",i.name),console.log("Voice enabled:",this.state.settings.voiceEnabled),setTimeout(()=>{this.speak(`${i.name}. ${i.description}`,!0),this.startTimer()},500),this.updateNavigationButtons()}catch(e){console.error("Error in startNextExercise:",e),this.setState({isRunning:!1}),this.timer&&(clearInterval(this.timer),this.timer=null)}}nextExercise(){console.log("nextExercise called");try{if(!this.state.isRunning){console.log("Workout is not running, not proceeding");return}if(!this.state.currentWorkout){console.log("No current workout, not proceeding");return}this.timer&&(clearInterval(this.timer),this.timer=null,console.log("Timer stopped in nextExercise")),this.setState({currentExercise:this.state.currentExercise+1}),console.log("Incremented to exercise:",this.state.currentExercise);const e=this.state.currentWorkout.phases;if(this.state.currentPhase>=e.length){console.log("Current phase out of bounds, completing workout"),this.completeWorkout();return}const t=e[this.state.currentPhase];if(console.log("Current phase:",t.name,"Total exercises in phase:",t.exercises.length),this.state.currentExercise>=t.exercises.length){if(console.log("Completed all exercises in phase, moving to next phase"),this.setState({currentPhase:this.state.currentPhase+1,currentExercise:0}),this.state.currentPhase>=e.length){console.log("All phases complete"),this.completeWorkout();return}this.state.settings.autoAdvance?this.startNextPhase():this.pauseWorkout()}else console.log("Continuing with next exercise in same phase"),this.state.settings.autoAdvance?this.startNextExercise():this.pauseWorkout()}catch(e){console.error("Error in nextExercise:",e),this.showError("Error during exercise transition")}}completeWorkout(){console.log("Workout completed!"),this.setState({isRunning:!1,isPaused:!1}),this.timer&&(clearInterval(this.timer),this.timer=null),this.clearSpeech(),this.updateStartButton("Start Workout"),this.elements.timerLabel.textContent="Workout Complete!",this.elements.phaseInfo.textContent="Great job!",this.showSuccess("Workout completed successfully!"),this.speak("Workout complete! Great job!",!0),m.celebrationAnimation(this.elements.timerDisplay),this.emit("workout:complete")}updateNavigationButtons(){this.elements.backBtn&&(this.elements.backBtn.disabled=this.state.currentExercise===0&&this.state.currentPhase===0),this.elements.skipBtn&&(this.elements.skipBtn.disabled=!this.state.isRunning)}toggleWorkout(){this.state.isRunning?this.pauseWorkout():this.startWorkout()}startWorkout(){if(!this.state.currentWorkout){this.showError("Please select a workout first");return}this.setState({isRunning:!0,isPaused:!1,totalWorkoutTime:Date.now()}),this.state.currentPhase>0||this.state.currentExercise>0||this.state.timeRemaining>0?this.startTimer():(this.setState({currentPhase:0,currentExercise:0,timeRemaining:0,phaseStartTime:Date.now(),phaseElapsedTime:0,completedExercises:0}),this.startNextPhase()),this.updateStartButton("Pause"),this.updateNavigationButtons(),m.pulseTimer(this.elements.timerDisplay,!0),this.emit("workout:start")}pauseWorkout(){this.setState({isRunning:!1,isPaused:!0}),this.timer&&(clearInterval(this.timer),this.timer=null),this.clearSpeech(),this.updateStartButton("Resume"),m.pulseTimer(this.elements.timerDisplay,!1),this.emit("workout:pause")}resetWorkout(){this.pauseWorkout(),this.setState({currentPhase:0,currentExercise:0,timeRemaining:0,phaseStartTime:0,phaseElapsedTime:0,completedExercises:0,isPaused:!1}),this.updateStartButton("Start Workout"),this.updateDisplay(),this.updateNavigationButtons(),this.updateProgress(0),this.elements.timerLabel.textContent="Select a workout",this.elements.phaseInfo.textContent="",this.elements.progressText.textContent="Ready to begin",this.emit("workout:reset")}startTimer(){this.timer&&clearInterval(this.timer),this.timer=setInterval(()=>{if(!this.state.isRunning){clearInterval(this.timer),this.timer=null;return}this.setState({timeRemaining:this.state.timeRemaining-1,phaseElapsedTime:(Date.now()-this.state.phaseStartTime)/1e3}),this.updateDisplay(),this.state.timeRemaining<=5&&this.state.timeRemaining>0&&(this.announceCountdown(this.state.timeRemaining),m.countdownAnimation(this.elements.timerDisplay)),this.state.timeRemaining<=0&&(clearInterval(this.timer),this.timer=null,this.notify(),this.nextExercise())},1e3)}updateDisplay(){const e=k.formatTime(this.state.timeRemaining);this.elements.minutes.textContent!==e.minutes&&m.animateNumber(this.elements.minutes,parseInt(this.elements.minutes.textContent)||0,parseInt(e.minutes),200),this.elements.seconds.textContent!==e.seconds&&m.animateNumber(this.elements.seconds,parseInt(this.elements.seconds.textContent)||0,parseInt(e.seconds),200),this.updateWorkoutProgress()}updateWorkoutProgress(){if(!this.state.currentWorkout||this.state.currentPhase>=this.state.currentWorkout.phases.length)return;const t=this.state.currentWorkout.phases[this.state.currentPhase].duration*60,s=Math.min(this.state.phaseElapsedTime/t*100,100);m.animateProgress(this.elements.progressFill,s);const i=Math.max(0,t-this.state.phaseElapsedTime),o=k.formatTime(Math.floor(i));this.elements.progressText.textContent=`Phase ${this.state.currentPhase+1}/${this.state.currentWorkout.phases.length} - ${o.display} remaining`}updateProgress(e){m.animateProgress(this.elements.progressFill,e),this.elements.progressFill&&this.elements.progressFill.setAttribute("aria-valuenow",e.toString())}updateStartButton(e){this.elements.startBtn.textContent=e,n.removeClass(this.elements.startBtn,"btn--success","btn--primary"),e==="Start Workout"?n.addClass(this.elements.startBtn,"btn--success"):n.addClass(this.elements.startBtn,"btn--primary")}showError(e){console.error(e),this.showToast(e,"error"),f.announceToScreenReader(e,"assertive"),m.shakeElement(this.elements.timerDisplay)}showSuccess(e){console.log(e),this.showToast(e,"success"),m.bounceElement(this.elements.timerDisplay)}showToast(e,t="info"){const s=n.create("div",{className:`toast toast--${t}`,textContent:e});this.ensureToastStyles(),document.body.appendChild(s),setTimeout(()=>n.addClass(s,"toast--show"),10),setTimeout(()=>{n.removeClass(s,"toast--show"),setTimeout(()=>{s.parentNode&&document.body.removeChild(s)},300)},3e3)}ensureToastStyles(){if(document.querySelector("#toast-styles"))return;const t=n.create("style",{id:"toast-styles",textContent:`
            .toast {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 12px 20px;
                border-radius: 8px;
                color: white;
                font-weight: 500;
                z-index: 10000;
                transform: translateX(100%);
                transition: transform 0.3s ease;
                max-width: 300px;
            }
            .toast--show {
                transform: translateX(0);
            }
            .toast--error {
                background: var(--color-error-500);
            }
            .toast--success {
                background: var(--color-success-500);
            }
            .toast--info {
                background: var(--color-info-500);
            }
        `});document.head.appendChild(t)}ensureFullscreenStyles(){if(document.querySelector("#fullscreen-styles"))return;const t=n.create("style",{id:"fullscreen-styles",textContent:`
            /* Fullscreen Mode Styles */
            .fullscreen-mode {
                overflow: hidden;
            }
            
            /* Accent button style for fullscreen button */
            .btn--accent {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
                color: white !important;
                border: 2px solid transparent !important;
                transition: all 0.3s ease !important;
            }
            
            .btn--accent:hover {
                transform: translateY(-2px) !important;
                box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4) !important;
            }
            
            .btn--accent:active {
                transform: translateY(0) !important;
            }
            
            .timer-fullscreen {
                position: fixed !important;
                top: 0 !important;
                left: 0 !important;
                width: 100vw !important;
                height: 100vh !important;
                background: linear-gradient(135deg, #0a0a1a 0%, #0d1424 50%, #0a2040 100%) !important;
                display: flex !important;
                flex-direction: column !important;
                justify-content: center !important;
                align-items: center !important;
                z-index: 999999 !important;
                padding: 2rem !important;
                box-sizing: border-box !important;
            }
            
            .timer-fullscreen-simulated {
                position: fixed !important;
                top: 0 !important;
                left: 0 !important;
                width: 100vw !important;
                height: 100vh !important;
                z-index: 999999 !important;
            }
            
            .timer-fullscreen .timer-display {
                font-size: min(20vw, 200px) !important;
                text-align: center !important;
                margin-bottom: 2rem !important;
                color: #ffffff !important;
                text-shadow: 
                    0 0 20px rgba(255, 255, 255, 0.8),
                    0 0 40px rgba(255, 255, 255, 0.6),
                    0 4px 8px rgba(0, 0, 0, 0.3) !important;
            }
            
            .timer-fullscreen .timer-display .minutes,
            .timer-fullscreen .timer-display .seconds {
                font-size: inherit !important;
                font-weight: 900 !important;
                color: #ffffff !important;
                text-shadow: 
                    0 0 30px rgba(255, 255, 255, 0.9),
                    0 0 60px rgba(255, 255, 255, 0.7),
                    0 4px 12px rgba(0, 0, 0, 0.4) !important;
                text-rendering: optimizeLegibility !important;
                -webkit-font-smoothing: antialiased !important;
            }
            
            .timer-fullscreen .timer-display .separator {
                font-size: inherit !important;
                color: #ffffff !important;
                opacity: 1 !important;
                font-weight: 900 !important;
                text-shadow: 
                    0 0 30px rgba(255, 255, 255, 0.9),
                    0 0 60px rgba(255, 255, 255, 0.7) !important;
                animation: blink 1s infinite !important;
            }
            
            .timer-fullscreen .timer-label {
                font-size: min(5vw, 48px) !important;
                color: #ffffff !important;
                text-align: center !important;
                margin-bottom: 1rem !important;
                font-weight: 600 !important;
                text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3) !important;
            }
            
            .timer-fullscreen .phase-info {
                font-size: min(3vw, 24px) !important;
                color: rgba(255, 255, 255, 0.8) !important;
                text-align: center !important;
                margin-bottom: 3rem !important;
                font-weight: 400 !important;
            }
            
            .timer-fullscreen .progress-container {
                width: 80% !important;
                max-width: 600px !important;
                margin: 2rem auto !important;
            }
            
            .timer-fullscreen .progress-bar {
                height: 8px !important;
                background: rgba(255, 255, 255, 0.2) !important;
                border-radius: 4px !important;
                overflow: hidden !important;
            }
            
            .timer-fullscreen .progress-fill {
                height: 100% !important;
                background: linear-gradient(90deg, #4CAF50, #8BC34A) !important;
                border-radius: 4px !important;
                transition: width 0.3s ease !important;
                box-shadow: 0 0 10px rgba(76, 175, 80, 0.4) !important;
            }
            
            .timer-fullscreen .progress-text {
                color: rgba(255, 255, 255, 0.7) !important;
                font-size: min(2.5vw, 18px) !important;
                text-align: center !important;
                margin-top: 1rem !important;
            }
            
            .timer-fullscreen .timer-controls {
                position: absolute !important;
                bottom: 2rem !important;
                left: 50% !important;
                transform: translateX(-50%) !important;
                display: flex !important;
                gap: 1rem !important;
                flex-wrap: wrap !important;
                justify-content: center !important;
            }
            
            .timer-fullscreen .btn {
                padding: 0.75rem 1.5rem !important;
                font-size: min(2.5vw, 16px) !important;
                border-radius: 8px !important;
                border: 2px solid rgba(255, 255, 255, 0.3) !important;
                background: rgba(255, 255, 255, 0.1) !important;
                color: #ffffff !important;
                backdrop-filter: blur(10px) !important;
                transition: all 0.3s ease !important;
                cursor: pointer !important;
            }
            
            .timer-fullscreen .btn:hover {
                background: rgba(255, 255, 255, 0.2) !important;
                border-color: rgba(255, 255, 255, 0.5) !important;
                transform: translateY(-2px) !important;
            }
            
            .timer-fullscreen .btn:active {
                transform: translateY(0) !important;
            }
            
            .timer-fullscreen .btn--primary {
                background: rgba(33, 150, 243, 0.3) !important;
                border-color: rgba(33, 150, 243, 0.5) !important;
            }
            
            .timer-fullscreen .btn--success {
                background: rgba(76, 175, 80, 0.3) !important;
                border-color: rgba(76, 175, 80, 0.5) !important;
            }
            
            .timer-fullscreen .btn--active {
                background: rgba(255, 255, 255, 0.3) !important;
                border-color: rgba(255, 255, 255, 0.7) !important;
            }
            
            /* Fullscreen button styles */
            .fullscreen-btn {
                position: relative !important;
                overflow: hidden !important;
            }
            
            .fullscreen-btn .fullscreen-icon {
                margin-right: 0.5rem !important;
            }
            
            @keyframes blink {
                0%, 50% { opacity: 1; }
                51%, 100% { opacity: 0.3; }
            }
            
            /* Hide non-essential elements in fullscreen */
            .fullscreen-mode .day-selection,
            .fullscreen-mode .workout-details,
            .fullscreen-mode .exercise-grid,
            .fullscreen-mode .settings-panel,
            .fullscreen-mode .app-header,
            .fullscreen-mode .app-footer {
                display: none !important;
            }
            
            /* Responsive adjustments for fullscreen */
            @media (max-width: 768px) {
                .timer-fullscreen {
                    padding: 1rem !important;
                }
                
                .timer-fullscreen .timer-display {
                    font-size: min(25vw, 150px) !important;
                    margin-bottom: 1rem !important;
                    color: #ffffff !important;
                    text-shadow: 
                        0 0 15px rgba(255, 255, 255, 0.9),
                        0 0 30px rgba(255, 255, 255, 0.7) !important;
                }
                
                .timer-fullscreen .timer-display .minutes,
                .timer-fullscreen .timer-display .seconds,
                .timer-fullscreen .timer-display .separator {
                    color: #ffffff !important;
                    font-weight: 900 !important;
                    text-shadow: 
                        0 0 20px rgba(255, 255, 255, 0.9),
                        0 0 40px rgba(255, 255, 255, 0.7) !important;
                }
                
                .timer-fullscreen .timer-label {
                    font-size: min(6vw, 32px) !important;
                }
                
                .timer-fullscreen .phase-info {
                    font-size: min(4vw, 18px) !important;
                    margin-bottom: 2rem !important;
                }
                
                .timer-fullscreen .timer-controls {
                    bottom: 1rem !important;
                    gap: 0.5rem !important;
                }
                
                .timer-fullscreen .btn {
                    padding: 0.5rem 1rem !important;
                    font-size: min(3vw, 14px) !important;
                }
            }
            
            @media (max-width: 480px) {
                .timer-fullscreen .timer-display {
                    font-size: min(30vw, 120px) !important;
                    color: #ffffff !important;
                    text-shadow: 
                        0 0 12px rgba(255, 255, 255, 0.9),
                        0 0 25px rgba(255, 255, 255, 0.8) !important;
                }
                
                .timer-fullscreen .timer-display .minutes,
                .timer-fullscreen .timer-display .seconds,
                .timer-fullscreen .timer-display .separator {
                    color: #ffffff !important;
                    font-weight: 900 !important;
                    text-shadow: 
                        0 0 15px rgba(255, 255, 255, 0.9),
                        0 0 30px rgba(255, 255, 255, 0.8) !important;
                }
                
                .timer-fullscreen .timer-controls {
                    flex-direction: column !important;
                    width: 100% !important;
                    max-width: 300px !important;
                }
                
                .timer-fullscreen .btn {
                    width: 100% !important;
                    text-align: center !important;
                }
            }
        `});document.head.appendChild(t)}ensureFullscreenFunctionality(){console.log("=== ENSURING FULLSCREEN FUNCTIONALITY ===");const e=document.getElementById("fullscreen-btn");if(console.log("Fullscreen button found:",!!e),e){const t=e.cloneNode(!0);e.parentNode.replaceChild(t,e),t.addEventListener("click",s=>{s.preventDefault(),s.stopPropagation(),console.log("FULLSCREEN BUTTON CLICKED - BACKUP HANDLER");const i=document.getElementById("timer-container");i?i.classList.contains("timer-fullscreen")?(console.log("Exiting fullscreen mode"),document.body.classList.remove("fullscreen-mode"),i.classList.remove("timer-fullscreen","timer-fullscreen-simulated"),t.querySelector(".fullscreen-text").textContent="Fullscreen",t.querySelector(".fullscreen-icon").textContent="🔳"):(console.log("Entering fullscreen mode"),document.body.classList.add("fullscreen-mode"),i.classList.add("timer-fullscreen","timer-fullscreen-simulated"),t.querySelector(".fullscreen-text").textContent="Exit Fullscreen",t.querySelector(".fullscreen-icon").textContent="⏹️"):console.error("Timer container not found"),navigator.vibrate&&navigator.vibrate(200)}),this.elements.fullscreenBtn=t,console.log("Fullscreen functionality ensured with backup handler")}else console.error("Fullscreen button not found even with backup search")}hapticFeedback(e=[200]){this.state.settings.vibrationEnabled&&navigator.vibrate&&navigator.vibrate(e)}async initializeSpeech(){if(!("speechSynthesis"in window)){console.warn("Speech synthesis not supported");return}return new Promise(e=>{const t=()=>{const s=this.speechSynthesis.getVoices();s.length>0?(console.log("Speech synthesis ready with",s.length,"voices"),e()):setTimeout(t,100)};this.speechSynthesis.onvoiceschanged!==void 0&&(this.speechSynthesis.onvoiceschanged=t),t()})}async initializeGoogleTTS(){try{console.log("Initializing Google Cloud TTS...");const e=w();if(console.log("API Key found:",!!e),!e){console.log("No Google Cloud API key found, using browser speech synthesis"),this.useGoogleTTS=!1;return}if(!L(e)){console.warn("Invalid Google Cloud API key format"),this.useGoogleTTS=!1;return}console.log("Initializing TTS service with API key...");const t=await this.ttsService.initialize(e);this.useGoogleTTS=t,console.log("TTS service initialization result:",t),t?(console.log("Google Cloud TTS (Free Tier) initialized successfully"),this.ttsService.updateSettings(this.state.settings),this.setState({settings:{...this.state.settings,googleTTSEnabled:!0}}),this.updateTTSStatus("Google Cloud TTS Active (Free Tier)","success"),this.updateUsageDisplay()):console.log("Google Cloud TTS failed to initialize, using browser speech synthesis")}catch(e){console.error("Error initializing Google Cloud TTS:",e),this.useGoogleTTS=!1}}speak(e,t=!1){var s,i;if(this.state.settings.voiceEnabled){if(console.log("=== SPEAK DEBUG ==="),console.log("useGoogleTTS:",this.useGoogleTTS),console.log("ttsService exists:",!!this.ttsService),console.log("ttsService.isInitialized:",(s=this.ttsService)==null?void 0:s.isInitialized),console.log("googleTTSEnabled setting:",this.state.settings.googleTTSEnabled),console.log("Text to speak:",e),this.useGoogleTTS&&((i=this.ttsService)!=null&&i.isInitialized)&&this.state.settings.googleTTSEnabled!==!1){console.log("Using Google Cloud TTS:",e),this.ttsService.speak(e,t);return}if(!this.speechSynthesis){console.warn("No speech synthesis available");return}console.log("Using browser speech synthesis:",e),t&&this.clearSpeech(),this.speechQueue.push(e),this.processSpeechQueue()}}processSpeechQueue(){if(this.speechQueue.length===0||this.isSpeaking)return;this.isSpeaking=!0;const e=this.speechQueue.shift(),t=new SpeechSynthesisUtterance(e);t.volume=this.state.settings.voiceVolume,t.rate=this.state.settings.voiceRate;const s=this.speechSynthesis.getVoices(),i=s.find(o=>o.lang.includes("en")&&o.name.includes("Google"))||s[0];i&&(t.voice=i),t.onend=()=>{this.isSpeaking=!1,setTimeout(()=>this.processSpeechQueue(),100)},t.onerror=o=>{console.warn("Speech synthesis error:",o),this.isSpeaking=!1,setTimeout(()=>this.processSpeechQueue(),100)},this.speechSynthesis.speak(t)}clearSpeech(){this.useGoogleTTS&&this.ttsService&&this.ttsService.clearSpeech(),this.speechSynthesis&&this.speechSynthesis.cancel(),this.speechQueue=[],this.isSpeaking=!1}announceCountdown(e){const t=["","One","Two","Three","Four","Five"];e<=5&&e>0&&this.speak(t[e],!0)}onResize(){const e=E.getViewportSize();this.emit("viewport:change",e)}onVisibilityChange(){document.hidden&&this.state.isRunning?console.log("App hidden while workout running"):!document.hidden&&this.state.isPaused&&console.log("App visible again")}onKeydown(e){if(!(e.target.tagName==="INPUT"||e.target.tagName==="TEXTAREA"))switch(e.key){case"ArrowLeft":this.elements.backBtn.disabled||(e.preventDefault(),this.goBack());break;case"ArrowRight":this.elements.skipBtn.disabled||(e.preventDefault(),this.skipExercise());break;case" ":e.preventDefault(),this.toggleWorkout();break;case"r":(e.ctrlKey||e.metaKey)&&(e.preventDefault(),this.resetWorkout());break;case"Escape":this.isFullscreen()?this.exitFullscreen():this.closeModal();break;case"f":(e.ctrlKey||e.metaKey)&&(e.preventDefault(),this.toggleFullscreen());break}}loadSettings(){const e=b.get("bjj-workout-settings",{}),t={...this.state.settings,...e};this.setState({settings:t},!1),this.applySettingsToUI()}saveSettings(){const e={};Object.entries(this.elements.settingsInputs).forEach(([t,s])=>{s&&(s.type==="checkbox"?e[t]=s.checked:s.type==="range"&&(e[t]=parseFloat(s.value)))}),this.setState({settings:{...this.state.settings,...e}}),b.set("bjj-workout-settings",this.state.settings),this.useGoogleTTS&&this.ttsService&&this.ttsService.updateSettings(this.state.settings),this.emit("settings:changed",this.state.settings)}saveGoogleTTSSettings(){var d,h;const e=n.$("#google-tts-enabled"),t=((d=n.$('input[name="auth-method"]:checked'))==null?void 0:d.value)||"api-key",s=n.$("#google-api-key"),i=n.$("#google-voice-select");if(!e)return;const o=e.checked,r=(i==null?void 0:i.value)||"en-US-Standard-A";let l=null;if(t==="api-key"){const c=(h=s==null?void 0:s.value)==null?void 0:h.trim();if(o&&!c){this.updateTTSStatus("Please enter a Google Cloud API key","error");return}if(o&&!L(c)){this.updateTTSStatus("Invalid API key format","error");return}l=c,C(c),A(null)}else{const c=F();if(o&&!c){this.updateTTSStatus("Please upload a service account JSON file","error");return}l=c,C(null)}this.setState({settings:{...this.state.settings,googleTTSEnabled:o,googleTTSAuthMethod:t,googleTTSVoice:r}}),o&&l?(t==="api-key"?this.ttsService.initialize(l):this.ttsService.initialize(null,l)).then(()=>{this.updateTTSStatus(),this.updateUsageDisplay()}):(this.ttsService.destroy(),this.updateTTSStatus("Browser TTS Active")),this.showToast("Google TTS settings saved","success")}loadServiceAccountFile(e){const t=new FileReader;t.onload=s=>{try{const i=JSON.parse(s.target.result);D(i)?(A(i),this.showServiceAccountPreview(i),this.showToast("Service account loaded successfully!","success")):this.showToast("Invalid service account JSON file","error")}catch{this.showToast("Failed to parse JSON file","error")}},t.onerror=()=>{this.showToast("Failed to read file","error")},t.readAsText(e)}showServiceAccountPreview(e){const t=n.$("#service-account-preview");t&&(t.innerHTML=`
                <div class="bg-green-50 border border-green-200 rounded p-2">
                    <div class="font-medium text-green-800">✓ Service Account Loaded</div>
                    <div class="text-green-700">Project: ${e.project_id}</div>
                    <div class="text-green-700">Email: ${e.client_email}</div>
                </div>
            `,n.removeClass(t,"hidden"))}async testGoogleTTS(){var e;if(!this.useGoogleTTS||!((e=this.ttsService)!=null&&e.isInitialized)){this.updateTTSStatus("Google TTS not available","error");return}try{this.updateTTSStatus("Testing Google TTS...","info"),await this.ttsService.speak("This is a test of Google Cloud Text-to-Speech free tier. The voice quality should be much better than browser speech synthesis.",!0),this.updateTTSStatus("Google TTS test completed successfully","success"),this.updateUsageDisplay()}catch(t){console.error("Google TTS test failed:",t),this.updateTTSStatus("Google TTS test failed: "+t.message,"error")}}updateTTSStatus(e=null,t="info"){const s=n.$("#tts-status");if(!s)return;if(!e){const o=this.getTTSStatus();o.useGoogleTTS&&o.isInitialized?(e="Google TTS: Active and ready (Free Tier)",t="success"):o.hasApiKey?(e="Google TTS: API key configured but not active",t="warning"):(e="Google TTS: Not configured (using browser TTS)",t="info")}const i={success:"text-green-600 bg-green-100",error:"text-red-600 bg-red-100",warning:"text-yellow-600 bg-yellow-100",info:"text-gray-600 bg-gray-100"};s.className=`text-xs p-2 rounded ${i[t]||i.info}`,s.textContent=`Status: ${e}`}updateUsageDisplay(){const e=n.$("#tts-usage-display");if(!e||!this.ttsService)return;const t=this.ttsService.getUsageInfo(),s=P(t.remaining),i=P(t.used);e.innerHTML=`
            <div class="text-xs text-gray-600">
                <div class="flex justify-between mb-1">
                    <span>Free Tier Usage:</span>
                    <span>${i} / 4M characters</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-blue-600 h-2 rounded-full" style="width: ${t.percentage}%"></div>
                </div>
                <div class="text-xs text-gray-500 mt-1">
                    ${s} remaining this month
                </div>
            </div>
        `}getTTSStatus(){var e;try{return{useGoogleTTS:this.useGoogleTTS,isInitialized:((e=this.ttsService)==null?void 0:e.isInitialized)||!1,hasApiKey:!!w(),availableVoices:this.useGoogleTTS&&this.ttsService?this.ttsService.getAvailableVoices():[]}}catch(t){return console.error("Error getting TTS status:",t),{useGoogleTTS:!1,isInitialized:!1,hasApiKey:!!w(),availableVoices:[]}}}applySettingsToUI(){Object.entries(this.elements.settingsInputs).forEach(([s,i])=>{i&&this.state.settings[s]!==void 0&&(i.type==="checkbox"?i.checked=this.state.settings[s]:i.type==="range"&&(i.value=this.state.settings[s]))});const e=n.$("#volume-display"),t=n.$("#rate-display");e&&(e.textContent=Math.round(this.state.settings.voiceVolume*100)+"%"),t&&(t.textContent=this.state.settings.voiceRate+"x")}showExerciseModal(e){const t=this.getExerciseLibrary()[e];t&&(this.elements.modalTitle.textContent=e,this.elements.modalDescription.textContent=t.description,this.elements.modalCues.innerHTML=t.cues.map(s=>`<li class="py-2 border-b border-gray-200 text-gray-600 last:border-b-0">${s}</li>`).join(""),m.animateModal(this.elements.modal,!0),this.modalFocusTrap=f.trapFocus(this.elements.modal),this.emit("modal:open",{exercise:e}))}closeModal(){m.animateModal(this.elements.modal,!1),this.modalFocusTrap&&(this.modalFocusTrap(),this.modalFocusTrap=null),this.emit("modal:close")}toggleSettings(){const e=n.hasClass(this.elements.settingsContent,"settings-content--open");n.toggleClass(this.elements.settingsContent,"settings-content--open"),n.toggleClass(this.elements.settingsBtn,"settings-toggle--active"),f.setAriaExpanded(this.elements.settingsBtn,!e),this.emit("settings:toggle",{open:!e})}notify(){this.state.settings.soundEnabled&&this.playNotificationBeep(),this.hapticFeedback(),m.bounceElement(this.elements.timerDisplay)}playNotificationBeep(){try{const e=new(window.AudioContext||window.webkitAudioContext),t=e.createOscillator(),s=e.createGain();t.connect(s),s.connect(e.destination),t.frequency.setValueAtTime(800,e.currentTime),s.gain.setValueAtTime(.3,e.currentTime),s.gain.exponentialRampToValueAtTime(.01,e.currentTime+.3),t.start(e.currentTime),t.stop(e.currentTime+.3)}catch(e){console.warn("Web Audio API beep failed, trying fallback:",e),this.elements.notificationSound&&this.elements.notificationSound.play().catch(t=>console.warn("Audio element fallback also failed:",t))}}destroy(){this.timer&&clearInterval(this.timer),this.clearSpeech(),this.ttsService&&this.ttsService.destroy(),this.wakeLock&&this.wakeLock.release(),window.removeEventListener("resize",this.handleResize),document.removeEventListener("visibilitychange",this.handleVisibilityChange),document.removeEventListener("keydown",this.handleKeydown),document.removeEventListener("fullscreenchange",this.handleFullscreenChange),document.removeEventListener("webkitfullscreenchange",this.handleFullscreenChange),document.removeEventListener("mozfullscreenchange",this.handleFullscreenChange),document.removeEventListener("MSFullscreenChange",this.handleFullscreenChange),m.cleanup(),this.saveState(),this.emit("app:destroy")}skipExercise(){console.log("=== SKIP EXERCISE ==="),console.log("Current phase:",this.state.currentPhase,"Current exercise:",this.state.currentExercise);try{if(!this.state.currentWorkout){console.log("No current workout selected");return}if(!this.state.isRunning){console.log("Workout is not running");return}this.timer&&(clearInterval(this.timer),this.timer=null,console.log("Timer stopped")),this.clearSpeech();const e=this.state.currentWorkout.phases;if(this.state.currentPhase>=e.length){console.log("All phases complete"),this.completeWorkout();return}const t=e[this.state.currentPhase];let s=this.state.currentExercise+1;if(s>=t.exercises.length){if(console.log("Completed all exercises in phase, moving to next phase"),this.setState({currentPhase:this.state.currentPhase+1,currentExercise:0}),this.state.currentPhase>=e.length){console.log("All phases complete"),this.completeWorkout();return}this.startNextPhase();return}this.setState({currentExercise:s}),console.log("New position - Phase:",this.state.currentPhase,"Exercise:",this.state.currentExercise),this.startNextExercise(),this.updateNavigationButtons()}catch(e){console.error("Error in skipExercise:",e),this.showError("Error skipping exercise"),this.pauseWorkout()}}goBack(){console.log("=== GO BACK ===");try{if(!this.state.currentWorkout){console.log("No current workout selected");return}if(!this.state.isRunning){console.log("Workout is not running");return}this.timer&&(clearInterval(this.timer),this.timer=null,console.log("Timer stopped in goBack")),this.clearSpeech();let e=this.state.currentExercise-1,t=this.state.currentPhase;if(e<0)if(t--,t<0){console.log("At the beginning, cannot go back further"),this.showToast("Already at the beginning","info");return}else e=this.state.currentWorkout.phases[t].exercises.length-1;this.setState({currentPhase:t,currentExercise:e}),console.log("New position - Phase:",this.state.currentPhase,"Exercise:",this.state.currentExercise),this.startNextExercise(),this.updateNavigationButtons()}catch(e){console.error("Error in goBack:",e),this.showError("Error going back"),this.pauseWorkout()}}getWorkoutData(){return{1:{name:"High-Intensity Kettlebell Snatch Intervals",focus:"VO₂max Booster",duration:30,phases:[{name:"Warm-Up",duration:5,exercises:[{name:"Joint Mobilization",duration:120,description:"Neck, shoulder, and hip circles"},{name:"Dynamic Movements",duration:120,description:"Arm swings, leg swings, inchworms"},{name:"Kettlebell Prep",duration:60,description:"Halos, light swings"}]},{name:"15:15 Snatch Intervals",duration:10,exercises:[{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Right Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"},{name:"Left Arm Snatches",duration:15,description:"15 seconds work"},{name:"Rest",duration:15,description:"15 seconds rest"}]},{name:"Recovery",duration:3,exercises:[{name:"Active Recovery",duration:180,description:"Walk, shake out arms, hydrate"}]},{name:"Optional Finisher",duration:4,exercises:[{name:"Tabata Swings",duration:240,description:"8 rounds: 20s work, 10s rest"}],optional:!0},{name:"Cooldown",duration:5,exercises:[{name:"Light Stretching",duration:180,description:"Shoulders, hamstrings, forearms"},{name:"Breathing",duration:120,description:"Deep diaphragmatic breathing"}]}]},2:{name:"EMOM Strength-Endurance Circuit",focus:"Anaerobic Threshold Training",duration:30,phases:[{name:"Warm-Up",duration:5,exercises:[{name:"Dynamic Warm-Up",duration:180,description:"Joint mobility and movement prep"},{name:"Practice Swings",duration:120,description:"Light swings and push-ups"}]},{name:"12-Minute EMOM Circuit",duration:12,exercises:[{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"},{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"},{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"},{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"},{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"},{name:"Swings + Push-Ups",duration:60,description:"15 swings + 5 push-ups"},{name:"Goblet Squats",duration:60,description:"10 goblet squats"}]},{name:"Farmer's Carry",duration:3,exercises:[{name:"Right Arm Carry",duration:30,description:"30 seconds per arm"},{name:"Left Arm Carry",duration:30,description:"30 seconds per arm"}]},{name:"Cooldown",duration:5,exercises:[{name:"Stretching",duration:300,description:"Legs, chest, forearms"}]}]},3:{name:"Low-Intensity Aerobic + Core",focus:"Active Recovery",duration:30,phases:[{name:"Warm-Up",duration:5,exercises:[{name:"Mobility Work",duration:180,description:"Slow arm/leg swings, torso twists"},{name:"Turkish Get-Up Practice",duration:120,description:"Light TGU rehearsal"}]},{name:"20-Minute Continuous Flow",duration:20,exercises:[{name:"Turkish Get-Up",duration:120,description:"1 rep each side"},{name:"Kettlebell Halos",duration:30,description:"5 rotations each direction"},{name:"Goblet Reverse Lunges",duration:60,description:"5 each leg"},{name:"Plank Pull-Through",duration:60,description:"5 each side"},{name:"Light Jogging",duration:30,description:"30 seconds easy movement"},{name:"Turkish Get-Up",duration:120,description:"1 rep each side"},{name:"Kettlebell Halos",duration:30,description:"5 rotations each direction"},{name:"Goblet Reverse Lunges",duration:60,description:"5 each leg"},{name:"Plank Pull-Through",duration:60,description:"5 each side"},{name:"Light Jogging",duration:30,description:"30 seconds easy movement"},{name:"Turkish Get-Up",duration:120,description:"1 rep each side"},{name:"Kettlebell Halos",duration:30,description:"5 rotations each direction"},{name:"Goblet Reverse Lunges",duration:60,description:"5 each leg"},{name:"Plank Pull-Through",duration:60,description:"5 each side"},{name:"Light Jogging",duration:30,description:"30 seconds easy movement"},{name:"Turkish Get-Up",duration:120,description:"1 rep each side"},{name:"Kettlebell Halos",duration:30,description:"5 rotations each direction"},{name:"Goblet Reverse Lunges",duration:60,description:"5 each leg"},{name:"Plank Pull-Through",duration:60,description:"5 each side"},{name:"Light Jogging",duration:30,description:"30 seconds easy movement"}]},{name:"Cooldown",duration:5,exercises:[{name:"Static Stretching",duration:300,description:"Cobra, figure-4, neck stretches"}]}]},4:{name:"Kettlebell Complex for Power-Endurance",focus:"Full-Body Conditioning",duration:30,phases:[{name:"Warm-Up",duration:5,exercises:[{name:"Dynamic Warm-Up",duration:180,description:"Joint mobility and movement prep"},{name:"Complex Practice",duration:120,description:"Light practice of complex movements"}]},{name:"Kettlebell Complex",duration:15,exercises:[{name:"Right Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Left Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Rest",duration:90,description:"Recovery between rounds"},{name:"Right Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Left Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Rest",duration:90,description:"Recovery between rounds"},{name:"Right Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Left Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Rest",duration:90,description:"Recovery between rounds"},{name:"Right Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Left Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Rest",duration:90,description:"Recovery between rounds"},{name:"Right Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Left Arm Complex",duration:45,description:"1. 5 One-arm swings → 2. 5 Cleans → 3. 5 Overhead presses → 4. 5 Front squats"},{name:"Rest",duration:90,description:"Recovery between rounds"}]},{name:"Optional Finisher",duration:2,exercises:[{name:"30-20-10 Ladder",duration:120,description:"High-pulls and burpees"}],optional:!0},{name:"Cooldown",duration:5,exercises:[{name:"Active Stretching",duration:300,description:"Shoulders, forearms, legs"}]}]},5:{name:"High-Intensity Grappling Circuit",focus:"AMRAP Rounds for Fight Conditioning",duration:30,phases:[{name:"Warm-Up",duration:5,exercises:[{name:"Dynamic Warm-Up",duration:180,description:"Joint mobility and movement prep"},{name:"Burst Drills",duration:120,description:"Short high-intensity bursts"}]},{name:"Sparring Rounds Circuit",duration:12,exercises:[{name:"AMRAP Round 1",duration:180,description:"1. 5 One-arm KB Rows per side → 2. 5 KB Thrusters → 3. 5 Burpees/Sprawls → 4. 10 Two-Hand KB Swings"},{name:"Rest",duration:60,description:"1 minute recovery"},{name:"AMRAP Round 2",duration:180,description:"1. 5 One-arm KB Rows per side → 2. 5 KB Thrusters → 3. 5 Burpees/Sprawls → 4. 10 Two-Hand KB Swings"},{name:"Rest",duration:60,description:"1 minute recovery"},{name:"AMRAP Round 3",duration:180,description:"1. 5 One-arm KB Rows per side → 2. 5 KB Thrusters → 3. 5 Burpees/Sprawls → 4. 10 Two-Hand KB Swings"},{name:"Rest",duration:60,description:"1 minute recovery"}]},{name:"Grip Burnout",duration:3,exercises:[{name:"Towel Hang",duration:30,description:"30 seconds per set"},{name:"Rest",duration:30,description:"30 seconds rest"}],repeat:2},{name:"Cooldown",duration:5,exercises:[{name:"Active Recovery",duration:300,description:"Walking, stretching, rehydration"}]}]},6:{name:"BJJ Sparring and Skill Training",focus:"Sport-Specific Day",duration:90,phases:[{name:"Pre-Class Warm-Up",duration:10,exercises:[{name:"Dynamic Warm-Up",duration:300,description:"Joint mobility and movement prep"},{name:"Light Kettlebell Work",duration:300,description:"Light swings and drills"}]},{name:"BJJ Training",duration:60,exercises:[{name:"Technique Practice",duration:1200,description:"Drill techniques and movements"},{name:"Live Sparring",duration:1800,description:"Intense rolling rounds"},{name:"Conditioning",duration:600,description:"Additional conditioning work"}]},{name:"Post-Class Cooldown",duration:20,exercises:[{name:"Stretching",duration:600,description:"Neck, forearms, back stretches"},{name:"Light Aerobic",duration:600,description:"Easy movement for recovery"}]}]},7:{name:"Rest and Recovery",focus:"Mobility Focus",duration:30,phases:[{name:"Active Recovery",duration:30,exercises:[{name:"Light Walk/Jog",duration:600,description:"Easy movement for blood flow"},{name:"Yoga/Stretching",duration:600,description:"Gentle stretching routine"},{name:"Mobility Work",duration:600,description:"Joint mobility and range of motion"}]}]}}}getExerciseLibrary(){return{"Kettlebell Snatch":{type:"Power",description:"Explosive one-arm kettlebell movement from swing to overhead lockout",cues:["Start with a powerful hip hinge","Drive the kettlebell up with hip extension","Pull the bell to your chest, then punch overhead","Lock out the arm overhead with shoulder stability","Control the descent back to swing position"]},"Kettlebell Swing":{type:"Power",description:"Fundamental hip hinge movement with explosive hip extension",cues:["Stand with feet shoulder-width apart","Hinge at hips, not waist","Drive hips forward explosively","Let arms follow the momentum","Control the backswing between legs"]},"Turkish Get-Up":{type:"Strength",description:"Complex full-body movement requiring stability and coordination",cues:["Start lying on back with KB locked out overhead","Roll to elbow, then to hand","Bridge up and sweep leg through","Lunge up to standing position","Reverse the movement back to start"]},"Goblet Squat":{type:"Strength",description:"Squat holding kettlebell at chest level",cues:["Hold kettlebell by the horns at chest","Feet slightly wider than shoulder-width","Squat down keeping chest up","Drive through heels to stand","Keep elbows inside knees at bottom"]},"Kettlebell Press":{type:"Strength",description:"Overhead pressing movement with kettlebell",cues:["Start with KB in rack position","Press straight up, not forward","Lock out arm completely overhead","Keep core tight throughout","Lower with control to rack position"]},"Kettlebell Clean":{type:"Power",description:"Explosive movement bringing KB to rack position",cues:["Start with KB between legs","Drive hips forward explosively","Guide KB to rack position","Catch with soft knees","KB should rest on forearm, not wrist"]},Plank:{type:"Core",description:"Isometric core strengthening exercise",cues:["Start in push-up position","Keep body in straight line","Engage core and glutes","Breathe normally","Don't let hips sag or pike up"]},Burpee:{type:"Conditioning",description:"Full-body exercise combining squat, plank, and jump",cues:["Start standing, drop into squat","Jump feet back to plank position","Complete push-up (optional)","Jump feet back to squat","Explode up with arms overhead"]},"One-arm KB Row":{type:"Strength",description:"Unilateral rowing movement using kettlebell for back strength",cues:["Hinge at hips, one hand on bench for support","Pull KB up to ribs, not chest","Keep elbow close to body","Squeeze shoulder blade at top","Lower with control"]},"KB Thruster":{type:"Power",description:"Squat to overhead press combination movement",cues:["Start with KB in rack position","Squat down keeping chest up","Drive through heels to stand","Use momentum to press KB overhead","Return to rack position"]},"Front Squat":{type:"Strength",description:"Squat with kettlebell in front rack position",cues:["Hold KB in rack position at shoulder","Keep elbow tight to body","Squat down with chest up","Drive through heels to stand","Keep KB close to body throughout"]},Sprawl:{type:"Conditioning",description:"BJJ-specific movement similar to burpee without jump",cues:["Start standing, drop to squat","Jump feet back to plank position","Hold plank briefly (combat position)","Jump feet back to squat","Return to standing (no jump)"]},"Kettlebell Row":{type:"Strength",description:"Rowing movement with kettlebell",cues:["Hinge at hips, keep back straight","Pull KB to ribs, not chest","Squeeze shoulder blade back","Control the lowering phase","Keep core engaged throughout"]},"Farmer's Carry":{type:"Strength",description:"Walking with heavy weight for grip and core strength",cues:["Stand tall with weight at sides","Keep shoulders back and down","Take controlled steps","Breathe normally","Maintain good posture throughout"]}}}}n.ready(()=>{window.bjjApp=new G});
